{"version":3,"sources":["Buttons.js","Plates.js","ClockFace.js","reportWebVitals.js","index.js"],"names":["Buttons","props","className","id","this","name","Component","Plates","unitOfTime","x","String","split","ClockFace","state","seconds","secondsSum","setState","bind","newState","sec","minutes","Math","trunc","giveTimeHours","giveTimeMin","giveTimeSec","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","timeFix","Run","tick","ReactDOM","render","StrictMode","document","getElementById","startOrStop","StartOrStop","fromEvent","subscribe","tick$","interval","pipe","takeWhile","next","takeUntil","waitActive","lastClick","click","Date","getTime","Event","bubbles","cancelable"],"mappings":"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","file":"static/js/main.d8fafd5f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Buttons extends Component {\r\n    constructor(props) {\r\n        super(props)        \r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"Buttons\" id={this.props.id}><p>{this.props.name}</p></button>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n//Класс плиток с цифрами\r\nexport default class Plates extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        if(this.props.unitOfTime <= 9) {\r\n            return (\r\n                <div className=\"Plates\">\r\n                    <div className=\"Digit\"><p>0</p></div>\r\n                    <div className=\"Digit\"><p>{this.props.unitOfTime}</p></div>\r\n                </div>\r\n            );\r\n        } else {\r\n            let x = String(this.props.unitOfTime).split(\"\");\r\n            return (\r\n                <div className=\"Plates\">\r\n                    <div className=\"Digit\"><p>{x[0]}</p></div>\r\n                    <div className=\"Digit\"><p>{x[1]}</p></div>\r\n                </div>\r\n            );\r\n        }        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Plates from \"./Plates\";\r\n\r\nexport default class ClockFace extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            seconds: this.props.secondsSum,\r\n        }\r\n        this.setState = this.setState.bind(this)\r\n    }\r\n    setState(newState) {\r\n        this.state.seconds = newState\r\n    }\r\n    giveTimeSec(sec) {\r\n        let seconds = sec % 60;\r\n        if (seconds >= 60) { return 0 }\r\n        else { return seconds }; \r\n    };\r\n    giveTimeMin(sec) {\r\n        let minutes = Math.trunc(sec / 60);\r\n        if(minutes >= 60) {\r\n            minutes = minutes % 60;\r\n            return Math.trunc(minutes); \r\n        }\r\n        else { return minutes }  \r\n    };\r\n    giveTimeHours(sec) {\r\n        return Math.trunc(sec / 3600)\r\n    };\r\n    render() {\r\n        this.setState(this.props.secondsSum);\r\n        return (\r\n            <div className=\"ClockFace\">\r\n                    <Plates unitOfTime={this.giveTimeHours(this.state.seconds)}></Plates>  \r\n                    <Plates unitOfTime={this.giveTimeMin(this.state.seconds)}></Plates>  \r\n                    <Plates unitOfTime={this.giveTimeSec(this.state.seconds)}></Plates>\r\n            </div>\r\n        );        \r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Buttons from './Buttons';\nimport ClockFace from \"./ClockFace\";\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport {takeWhile, fromEvent, interval, takeUntil} from 'rxjs';\n\nlet timeFix = 0;\nlet Run = false;\n\nconst tick = () => {\n  ReactDOM.render(\n  <React.StrictMode>\n    <ClockFace secondsSum={timeFix++}/>\n    <div className='ButtonsInterface'>\n      <Buttons id=\"StarOrStopBttn\" name=\"Start/Stop\"></Buttons>  \n      <Buttons id=\"WaitBttn\" name=\"Wait\"></Buttons>\n      <Buttons id=\"ResetBttn\" name=\"Reset\"></Buttons>\n    </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ClockFace startOrStop={Run} secondsSum={timeFix++}/>\n    <div className='ButtonsInterface'>\n      <Buttons id=\"StarOrStopBttn\" name=\"Start/Stop\"></Buttons>  \n      <Buttons id=\"WaitBttn\" name=\"Wait\"></Buttons>\n      <Buttons id=\"ResetBttn\" name=\"Reset\"></Buttons>\n    </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nconst StartOrStop = document.getElementById('StarOrStopBttn');\nlet clickStartOrStop = fromEvent(StartOrStop, 'click', Run);\nclickStartOrStop.subscribe(\n  () => {\n    const tick$ = interval(1000)\n      .pipe(\n        takeWhile(() => Run)\n      );\n    tick$.subscribe({ next: () => tick() })\n    if(!Run) {\n      Run = true\n    } else { \n      timeFix = 0;\n      takeUntil(() => tick$)\n      tick();\n      Run = false;\n    }\n  }\n)\n\n//let intervalId;\n//let startOrStop = document.getElementById('StarOrStopBttn');\n// startOrStop.addEventListener(\"click\", \n// // function() {\n//   //   if(waitActive) {\n//   //     intervalId = setInterval(tick, 1000); \n//   //     waitActive = false;\n//   //   } else if(intervalId == undefined) {\n//   //     timeFix = 0;\n//   //     intervalId = setInterval(tick, 1000); \n//   //   } else {\n//   //     intervalId = clearInterval(intervalId);    \n//   //     timeFix = 0;\n//   //     tick();\n//   //   }\n//   // }\n// )\n\n\nlet waitActive = false;\nlet lastClick = 0;\nlet waitBttn = fromEvent(document.getElementById('WaitBttn'), 'click', waitActive, Run);\nwaitBttn.subscribe(\n  () => {\n    let click = (new Date()).getTime();\n    if(click - lastClick < 300) {\n      if (timeFix > 0 && Run === true) {\n        waitActive = true;  \n        Run = false;\n      }\n    }\n    lastClick = click;\n  }\n)\n\n// let waitActive = false;\n// let lastClick = 0;\n// let waitBttn = document.getElementById('WaitBttn');\n// waitBttn.addEventListener(\"click\", function() {\n//   let click = (new Date()).getTime();\n//   if(click - lastClick < 300) {\n//     if (timeFix > 0 && intervalId != undefined) {\n//       intervalId = clearInterval(intervalId); \n//       waitActive = true;  \n//     }\n//   }\n//   lastClick = click;\n// })\n\n\nlet resetBttn = fromEvent(document.getElementById('ResetBttn'), 'click', waitActive);\nresetBttn.subscribe(\n  () => {\n    timeFix = 0;\n    const eventClick = new Event('click', { bubbles: true, cancelable: false });\n    if (waitActive) {\n      timeFix = 0;\n      waitActive = false;      \n      const tick$ = interval(1000)\n        .pipe(\n          takeWhile(() => Run)\n        );\n      tick$.subscribe({ next: () => tick() })\n      if(!Run) {\n        Run = true\n      } else { \n        timeFix = 0;\n        takeUntil(() => tick$)\n        tick();\n        Run = false;\n      }\n    }    \n  }\n)\n\n// let resetBttn = document.getElementById('ResetBttn');\n// resetBttn.addEventListener(\"click\", function() {\n//   timeFix = 0;\n//   if (waitActive) {\n//     intervalId = clearInterval(intervalId);  \n//     intervalId = setInterval(tick, 1000); \n//   }\n// })\n\nreportWebVitals();\n"],"sourceRoot":""}